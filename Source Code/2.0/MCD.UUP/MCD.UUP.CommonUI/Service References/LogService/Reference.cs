//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MCD.UUP.CommonUI.LogService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/MCD.UUP.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MCD.UUP.CommonUI.LogService.LogEntity))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogEntity", Namespace="http://schemas.datacontract.org/2004/07/MCD.UUP.Entity")]
    [System.SerializableAttribute()]
    public partial class LogEntity : MCD.UUP.CommonUI.LogService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LogTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogMessage {
            get {
                return this.LogMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LogMessageField, value) != true)) {
                    this.LogMessageField = value;
                    this.RaisePropertyChanged("LogMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogTime {
            get {
                return this.LogTimeField;
            }
            set {
                if ((this.LogTimeField.Equals(value) != true)) {
                    this.LogTimeField = value;
                    this.RaisePropertyChanged("LogTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogTitle {
            get {
                return this.LogTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTitleField, value) != true)) {
                    this.LogTitleField = value;
                    this.RaisePropertyChanged("LogTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeField, value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogService")]
    public interface ILogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/InsertLog", ReplyAction="http://tempuri.org/ILogService/InsertLogResponse")]
        int InsertLog(MCD.UUP.CommonUI.LogService.LogEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/SelectLogs", ReplyAction="http://tempuri.org/ILogService/SelectLogsResponse")]
        System.Data.DataTable SelectLogs(System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, string logType, string logTitle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ILogServiceChannel : MCD.UUP.CommonUI.LogService.ILogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LogServiceClient : System.ServiceModel.ClientBase<MCD.UUP.CommonUI.LogService.ILogService>, MCD.UUP.CommonUI.LogService.ILogService {
        
        public LogServiceClient() {
        }
        
        public LogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertLog(MCD.UUP.CommonUI.LogService.LogEntity entity) {
            return base.Channel.InsertLog(entity);
        }
        
        public System.Data.DataTable SelectLogs(System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, string logType, string logTitle) {
            return base.Channel.SelectLogs(startTime, endTime, logType, logTitle);
        }
    }
}
