        /// <summary>
        /// 获取服务器文件信息。
        /// </summary>
        /// <returns></returns>
        public List<UpdateFile> GetServerFiles()
        {
            List<UpdateFile> list = null;
            try
            {
                string xml = null;
                string url = "http://localhost/MCD.FileService/FileView.ashx";

                HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create(url);
                req.Method = "GET";
                req.ContentType = "application/x-www-form-urlencoded";
                req.CookieContainer = new CookieContainer();
                req.UserAgent = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)";
                req.KeepAlive = true;
                req.Timeout = 10000000;

                using (HttpWebResponse myResponse = (HttpWebResponse)req.GetResponse())
                {
                    using (StreamReader reader = new StreamReader(myResponse.GetResponseStream(), Encoding.UTF8))
                    {
                        xml = reader.ReadToEnd();
                    }
                }
                if (!string.IsNullOrEmpty(xml))
                {
                    list = new List<UpdateFile>();
                    object o = this.Deserialize(list.GetType(), xml);
                    if (o != null)
                    {
                        list = o as List<UpdateFile>;
                    }
                }
            }
            catch 
            {
                list = null;
            }
            return list;
        }


        /// <summary>
        /// 将指定的xml格式的字符反序列化为对应的对象并返回。
        /// </summary>
        /// <param name="t">对象的类型</param>
        /// <param name="xml">待反序列化的xml格式的字符的内容</param>
        /// <returns>返回对应的对象</returns>
        private Object Deserialize(Type t, string xml)
        {
            Object o = null;
            try
            {
                XmlSerializer serializer = new XmlSerializer(t);
                using (MemoryStream mem = new MemoryStream(Encoding.UTF8.GetBytes(xml)))
                {
                    o = serializer.Deserialize(mem);
                }
            }
            catch { o = null; }
            return o;
        }