<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="EntityEdit" xml:space="preserve">
    <value>编辑实体信息</value>
  </data>
  <data name="lblAPStartDate" xml:space="preserve">
    <value>开始出AP日期:</value>
  </data>
  <data name="lblEntityName" xml:space="preserve">
    <value>实体名称:</value>
  </data>
  <data name="lblEntityType" xml:space="preserve">
    <value>实体类型:</value>
  </data>
  <data name="lblIsCalculateAP" xml:space="preserve">
    <value>是否出AP:</value>
  </data>
  <data name="lblKioskNo" xml:space="preserve">
    <value>Kiosk名称:</value>
  </data>
  <data name="lblOpeningDate" xml:space="preserve">
    <value>开业日:</value>
  </data>
  <data name="lblOwnerVendor" xml:space="preserve">
    <value>所属业主:</value>
  </data>
  <data name="lblRemark" xml:space="preserve">
    <value>备注:</value>
  </data>
  <data name="lblRentEndDate" xml:space="preserve">
    <value>租赁到期日:</value>
  </data>
  <data name="lblRentStartDate" xml:space="preserve">
    <value>起租日:</value>
  </data>
  <data name="lblStoreDeptNo" xml:space="preserve">
    <value>餐厅/部门编号:</value>
  </data>
  <data name="btnSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="lblStoreDept" xml:space="preserve">
    <value>餐厅/部门:</value>
  </data>
  <data name="lblVendorInfo" xml:space="preserve">
    <value>选择或取消业主，会添加或删除相关租金规则</value>
  </data>
  <data name="AddEntitySuccess" xml:space="preserve">
    <value>新增实体信息成功</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="EditEntitySuccess" xml:space="preserve">
    <value>修改实体信息成功</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeChooseEntityType" xml:space="preserve">
    <value>请选择实体类型！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeChooseIsCalcAP" xml:space="preserve">
    <value>请选择是否出AP！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeChooseKioskNo" xml:space="preserve">
    <value>请选择Kiosk编号！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeChooseStoreNo" xml:space="preserve">
    <value>请输入餐厅/部门编号！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeChooseVendor" xml:space="preserve">
    <value>请选择当前实体所属业主！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeConfirmRentEndDate" xml:space="preserve">
    <value>MSIS中的租赁到期日为{0}，与录入的值不符，请确认！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeInputEntityName" xml:space="preserve">
    <value>请输入实体名称！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="NoticeTitle" xml:space="preserve">
    <value>提示信息</value>
    <comment>弹出提示信息的标题</comment>
  </data>
  <data name="NoticeEntityRepeat" xml:space="preserve">
    <value>实体名称重复！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="lblNote" xml:space="preserve">
    <value>注：输入餐厅或部门编号后按Enter键以校验是否存在</value>
  </data>
  <data name="StoreDeptNoError" xml:space="preserve">
    <value>输入的餐厅/部门编号不存在或者不属于当前公司或者状态为I</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="EndDateLessThenStartDate" xml:space="preserve">
    <value>租赁到期日必须大于起租日！</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="OpenDateLessThenStartDate" xml:space="preserve">
    <value>起租日必须小于等于开业日！</value>
    <comment>弹出提示信息</comment>
  </data>
</root>