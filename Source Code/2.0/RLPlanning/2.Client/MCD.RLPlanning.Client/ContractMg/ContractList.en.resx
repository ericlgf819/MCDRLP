<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyCode" xml:space="preserve">
    <value>Company Code</value>
  </data>
  <data name="ContractList" xml:space="preserve">
    <value>Contract List</value>
  </data>
  <data name="EntityName" xml:space="preserve">
    <value>Name of entity</value>
  </data>
  <data name="EntityTypeName" xml:space="preserve">
    <value>Entity Type</value>
  </data>
  <data name="lblArea" xml:space="preserve">
    <value>Area:</value>
  </data>
  <data name="lblCompanyNo" xml:space="preserve">
    <value>Company No:</value>
  </data>
  <data name="lblContractManage" xml:space="preserve">
    <value>Contract Management:</value>
  </data>
  <data name="lblContractNo" xml:space="preserve">
    <value>Contract No:</value>
  </data>
  <data name="lblStatus" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="lblStoreDeptNo" xml:space="preserve">
    <value>Restaurant / Department Number:</value>
  </data>
  <data name="lblVendorNo" xml:space="preserve">
    <value>Vendor No:</value>
  </data>
  <data name="RentEndDate" xml:space="preserve">
    <value>Rent End Date</value>
  </data>
  <data name="RentStartDate" xml:space="preserve">
    <value>Rent Start Date</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StoreOrDeptNo" xml:space="preserve">
    <value>Store/Dept No.</value>
  </data>
  <data name="VendorNo" xml:space="preserve">
    <value>Owners Number</value>
  </data>
  <data name="btnChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="btnDetail" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="btnRelet" xml:space="preserve">
    <value>Renewal</value>
  </data>
  <data name="btnAddnew" xml:space="preserve">
    <value>New Contract</value>
  </data>
  <data name="btnSelect" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="All" xml:space="preserve">
    <value />
  </data>
  <data name="CanNotDeleteContract" xml:space="preserve">
    <value>Only the virtual  contract can be deleted!</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="DeleteContractSuccess" xml:space="preserve">
    <value>Contract successfully removed</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="SearchAreaError" xml:space="preserve">
    <value>Find regional information error</value>
  </data>
  <data name="SearchContractError" xml:space="preserve">
    <value>Find an error contract information</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="SearchContractList" xml:space="preserve">
    <value>Contract list query</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="StoreList" xml:space="preserve">
    <value>Store list</value>
  </data>
  <data name="NoticeCanNotChangeContract" xml:space="preserve">
    <value>Only effective contract can be changed or releted!</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="grpSearchCondition" xml:space="preserve">
    <value>Search condition</value>
  </data>
  <data name="LastModifyTime" xml:space="preserve">
    <value>Last Modify Time</value>
  </data>
  <data name="ContractNO" xml:space="preserve">
    <value>Contract No.</value>
  </data>
  <data name="CreateTime" xml:space="preserve">
    <value>Create Time</value>
  </data>
  <data name="VendorName" xml:space="preserve">
    <value>Vendor Name</value>
  </data>
  <data name="ConfirmDeleteContract" xml:space="preserve">
    <value>Sure to delete the selected contract?</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="ContractIsLocked" xml:space="preserve">
    <value>Because the data associated with the AP \ GL process in the "audit ", "approval"or"Generate Certificate"step which is locked, does not allow operation!</value>
    <comment>弹出提示信息</comment>
  </data>
  <data name="CreateDeleteWorkflow" xml:space="preserve">
    <value>Operate success, Already created delete flow to checker!</value>
  </data>
  <data name="btnCreateAPGLByHand" xml:space="preserve">
    <value>手工发起APGL</value>
  </data>
  <data name="btnCreateAPGLByHandDone" xml:space="preserve">
    <value>发起完毕</value>
  </data>
  <data name="btnCreateAPGLByHandMessage" xml:space="preserve">
    <value>手工发起APGL用时可能比较长,是否发起?</value>
  </data>
  <data name="LastModifyUserName" xml:space="preserve">
    <value>LastModifyUserName</value>
  </data>
  <data name="lblFromSRLS" xml:space="preserve">
    <value>From:</value>
  </data>
</root>