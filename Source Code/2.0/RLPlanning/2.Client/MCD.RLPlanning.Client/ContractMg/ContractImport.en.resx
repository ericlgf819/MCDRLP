<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnChooseFile" xml:space="preserve">
    <value>Choose File</value>
  </data>
  <data name="btnImport" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="btnImportPreview" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="ContractImport" xml:space="preserve">
    <value>Contract Import</value>
  </data>
  <data name="FileNotExist" xml:space="preserve">
    <value>File not exist, please choose again!</value>
    <comment>提示信息</comment>
  </data>
  <data name="ImportContractError" xml:space="preserve">
    <value>Import Contract Error</value>
  </data>
  <data name="ImportContracts" xml:space="preserve">
    <value>Import Contracts</value>
  </data>
  <data name="lblPath" xml:space="preserve">
    <value>File Path:</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Processing, please wait......</value>
  </data>
  <data name="CheckAllRatioCycleDisEnable" xml:space="preserve">
    <value>{0}.{1} {0}. {1} periods the percentage of the size of the rules are not disabled</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="CheckAllRuleDisEnable" xml:space="preserve">
    <value>{0}. {1} at least to enable a rule</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="CheckConditionError" xml:space="preserve">
    <value>{0}. {1} conditions are not correct \n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckEntityHasNoVendor" xml:space="preserve">
    <value>{0}. {1} entities not associated with the owners\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckEntityInfoRentTypeNotExist" xml:space="preserve">
    <value>{0}. {1} rent types of missing\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckEntityInfoSettingNotExist" xml:space="preserve">
    <value>{0}. {1} to set the data entity information does not exist\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckFixedTimeIntervalError" xml:space="preserve">
    <value>{0}. {1} fixed rent period or has not closed does not mean maximum and minimum overlap or entity to hire day and accrue at\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckFixedTimeIntervalNotExist" xml:space="preserve">
    <value>{0}. {1} fixed rent period of time missing\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckFormulaError" xml:space="preserve">
    <value>{0}. {1} the formula is not correct\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckNotExistEntity" xml:space="preserve">
    <value>{0}.{1} The contract entity do not exist\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckNotExistVendor" xml:space="preserve">
    <value>{0}.{1} The contract does not exist in the owners\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckRatioConditionNotExist" xml:space="preserve">
    <value>{0}. {1} missing percentage of conditional formula\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckRatioCycleError" xml:space="preserve">
    <value>{0}.{1} the great cycle of the billing cycle must be greater than the small cycle billing cycle!</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="CheckRatioCycleTypeNotExist" xml:space="preserve">
    <value>{0}. {1} the percentage size of the cycle does not exist\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckRatioTimeIntervalError" xml:space="preserve">
    <value>{0}. {1} periods the percentage of rent or have not closed does not mean maximum and minimum overlap or entity to hire day and accrue at\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckRatioTimeIntervalNotExist" xml:space="preserve">
    <value>{0}. {1} the percentage of time does not exist\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckStoreDeptNotInTheCompany" xml:space="preserve">
    <value>{0}.{1}StoreDeptNo is not in the contract belongs to the company!</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="CheckVendorHasNoEntity" xml:space="preserve">
    <value>{0}. {1} is not associated entity owner\n</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="CheckVendorStatus" xml:space="preserve">
    <value>{0}.Vendor “{1}” status must be 'Active'!</value>
    <comment>校验提示信息</comment>
  </data>
  <data name="NULLAmount" xml:space="preserve">
    <value>{0}. {1} the amount of space rental rules</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLAmountFormulaDesc" xml:space="preserve">
    <value>{0}. {1} formula for the space rental rules</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLAPStartDate" xml:space="preserve">
    <value>{0}. {1} entity is out of AP to Yes, the date of space AP</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLCalendar" xml:space="preserve">
    <value>{0}. {1} rent regulations lease / calendar is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLCycle" xml:space="preserve">
    <value>{0}. {1} rent regulations billing cycle is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NullDescription" xml:space="preserve">
    <value>{0}.{1} Description of rent rule is null</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLEndDate" xml:space="preserve">
    <value>{0}. {1} rent regulations end time for the air time</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLEntityName" xml:space="preserve">
    <value>{0}. {1} there is an entity of the entity name is null</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLFirstDueDate" xml:space="preserve">
    <value>{0}. {1} first DUEDATE empty rental rules</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLIsCalculateAP" xml:space="preserve">
    <value>{0}. {1} calculate AP is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLIsPure" xml:space="preserve">
    <value>{0}. {1} whether the rules of pure percentage rent is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLKioskNo" xml:space="preserve">
    <value>{0}. {1} when the entity is a dessert shop, Kiosk number can not be empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLPayType" xml:space="preserve">
    <value>{0}. {1} pay type of the rent rule is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLRealestateSales" xml:space="preserve">
    <value>{0}. {1} entity for the restaurant / dessert provided when the property can not be empty in SALES</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLRentEndDate" xml:space="preserve">
    <value>{0}. {1} entities lease expiration date is empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLRentStartDate" xml:space="preserve">
    <value>{0}. {1} entity accrue at blank</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLStartDate" xml:space="preserve">
    <value>{0}. {1} rent regulations start time for the empty time</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLStoreOrDeptNo" xml:space="preserve">
    <value>{0}. {1} entities Restaurant / department number blank</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLTaxRate" xml:space="preserve">
    <value>{0}. {1} entity for the restaurant / dessert when the tax rate can not be empty</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="NULLZXStartDate" xml:space="preserve">
    <value>{0}.{1} Line rental start date of fixed rent is null</value>
    <comment>校验字段空值</comment>
  </data>
  <data name="CalcAPDateIsNull" xml:space="preserve">
    <value>Calc AP date is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="CompanyCodeError" xml:space="preserve">
    <value>Company code error</value>
    <comment>数据校验</comment>
  </data>
  <data name="CompanyNameNotMatch" xml:space="preserve">
    <value>Company name not match</value>
    <comment>数据校验</comment>
  </data>
  <data name="CycleError" xml:space="preserve">
    <value>Cycle error</value>
    <comment>数据校验</comment>
  </data>
  <data name="CycleIsNull" xml:space="preserve">
    <value>Cycle is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="CycleTypeError" xml:space="preserve">
    <value>Cycle type error</value>
    <comment>数据校验</comment>
  </data>
  <data name="CycleTypeIsNull" xml:space="preserve">
    <value>Cycle type is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="EntityNameIsNull" xml:space="preserve">
    <value>Entity name is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="EntityTypeError" xml:space="preserve">
    <value>Entity type error</value>
    <comment>数据校验</comment>
  </data>
  <data name="EntityTypeIsNull" xml:space="preserve">
    <value>Entity type is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="FormulaIsNull" xml:space="preserve">
    <value>Formula is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="IsCalcAPIsNull" xml:space="preserve">
    <value>Is calc AP is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="IsCalcAPValueError" xml:space="preserve">
    <value>Is calc AP value error</value>
    <comment>数据校验</comment>
  </data>
  <data name="OpenDateIsNull" xml:space="preserve">
    <value>Open date is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="PaymentTypeError" xml:space="preserve">
    <value>Payment type error</value>
    <comment>数据校验</comment>
  </data>
  <data name="PaymentTypeIsNull" xml:space="preserve">
    <value>Payment type is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="RentEndDateIsNull" xml:space="preserve">
    <value>Rent end date is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="RentStartDateIsNull" xml:space="preserve">
    <value>Rent start date is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="RentTypeIsNull" xml:space="preserve">
    <value>Rent type is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="StoreDeptNoError" xml:space="preserve">
    <value>Store/Dept No. error</value>
    <comment>数据校验</comment>
  </data>
  <data name="StoreDeptNoIsNull" xml:space="preserve">
    <value>Store/Dept No. is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="SummaryError" xml:space="preserve">
    <value>Summary error</value>
    <comment>数据校验</comment>
  </data>
  <data name="SummaryIsNull" xml:space="preserve">
    <value>Summary is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="TaxRateIsNull" xml:space="preserve">
    <value>Tax rate is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="VendorNameIsNull" xml:space="preserve">
    <value>Vendor name is null</value>
    <comment>数据校验</comment>
  </data>
  <data name="ImportResult" xml:space="preserve">
    <value>Total count:{0}, Success count:{1}, Fail count:{2}</value>
    <comment>执行结果</comment>
  </data>
  <data name="ContractIndex" xml:space="preserve">
    <value>Contract Index</value>
    <comment>列标题</comment>
  </data>
  <data name="ExcelIndex" xml:space="preserve">
    <value>Excel Index</value>
    <comment>列标题</comment>
  </data>
  <data name="MessageInfo" xml:space="preserve">
    <value>Message</value>
    <comment>列标题</comment>
  </data>
  <data name="CheckMessage" xml:space="preserve">
    <value>Check Message</value>
    <comment>列标题</comment>
  </data>
  <data name="RelationData" xml:space="preserve">
    <value>Relation Data</value>
    <comment>列标题</comment>
  </data>
  <data name="FileIsOpen" xml:space="preserve">
    <value>The excel file is opened, please close it and try again!</value>
  </data>
  <data name="FormatError" xml:space="preserve">
    <value>The format of excel is error or no data, please check the file!</value>
    <comment>提示信息</comment>
  </data>
  <data name="SheetFormatError" xml:space="preserve">
    <value>The format of these sheets are error:{0}</value>
    <comment>提示信息</comment>
  </data>
  <data name="btnTemplate" xml:space="preserve">
    <value>Template</value>
  </data>
</root>