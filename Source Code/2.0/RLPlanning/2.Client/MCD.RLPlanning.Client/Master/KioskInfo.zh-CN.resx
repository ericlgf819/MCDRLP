<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblKioskNo" xml:space="preserve">
    <value>甜品店编号:</value>
  </data>
  <data name="lblStatus" xml:space="preserve">
    <value>状 态:</value>
  </data>
  <data name="lblStoreNo" xml:space="preserve">
    <value>归属餐厅编号:</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>保存成功!</value>
    <comment>Hint</comment>
  </data>
  <data name="AddChange" xml:space="preserve">
    <value>录入调整记录</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>地址</value>
    <comment>gvList.Column2</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>备注</value>
    <comment>gvList.Column7</comment>
  </data>
  <data name="IsNeedSubtractSalse" xml:space="preserve">
    <value>是否从母店销售数据中减除</value>
    <comment>gvList.Column5</comment>
  </data>
  <data name="KioskName" xml:space="preserve">
    <value>名称</value>
    <comment>gvList.Column1</comment>
  </data>
  <data name="KioskNo" xml:space="preserve">
    <value>甜品店编号</value>
    <comment>gvList.Column0</comment>
  </data>
  <data name="KioskType" xml:space="preserve">
    <value>类型</value>
    <comment>gvList.Column3</comment>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
    <comment>gvList.Column6</comment>
  </data>
  <data name="StoreNo" xml:space="preserve">
    <value>归属餐厅编号</value>
    <comment>gvList.Column4</comment>
  </data>
  <data name="DelKioskConfirmMsg" xml:space="preserve">
    <value>是否确认删除?</value>
    <comment>Hint</comment>
  </data>
  <data name="ExistsRelatContract" xml:space="preserve">
    <value>该甜品店存在与之关联的合同实体，不允许操作!</value>
  </data>
  <data name="ActiveDate" xml:space="preserve">
    <value>生效日期</value>
    <comment>gvList.Column8</comment>
  </data>
  <data name="MessageIsLocked" xml:space="preserve">
    <value>该数据已锁定，不允许操作!</value>
    <comment>Hint</comment>
  </data>
  <data name="CreateContractErrorWithCompanyCode" xml:space="preserve">
    <value>无法获取所选甜品店相关的公司编号</value>
    <comment>Hint</comment>
  </data>
  <data name="CreateContractErrorWithSales" xml:space="preserve">
    <value>所选甜品店必须单独结算租金</value>
    <comment>Hint</comment>
  </data>
  <data name="lblCompany" xml:space="preserve">
    <value>公司编号/简称:</value>
  </data>
  <data name="lblArea" xml:space="preserve">
    <value>区域:</value>
  </data>
  <data name="lblFromSRLS" xml:space="preserve">
    <value>来 源:</value>
  </data>
  <data name="FromSRLS" xml:space="preserve">
    <value>不允许操作来源于租金计算系统的数据!</value>
    <comment>Hint</comment>
  </data>
  <data name="SalesInputErr" xml:space="preserve">
    <value>非独立计算租金的甜品店不能录入销售数据!</value>
  </data>
  <data name="Caption" xml:space="preserve">
    <value>系统提示</value>
  </data>
  <data name="InvalidKiosk" xml:space="preserve">
    <value>状态为I的实体不能录入销售数据!</value>
  </data>
  <data name="KioskInfo" xml:space="preserve">
    <value>甜品站信息</value>
  </data>
</root>