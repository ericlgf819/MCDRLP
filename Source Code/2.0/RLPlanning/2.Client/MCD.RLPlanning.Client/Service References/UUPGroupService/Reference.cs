//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MCD.RLPlanning.Client.UUPGroupService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/MCD.UUP.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MCD.RLPlanning.Client.UUPGroupService.GroupEntity))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupEntity", Namespace="http://schemas.datacontract.org/2004/07/MCD.UUP.Entity")]
    [System.SerializableAttribute()]
    public partial class GroupEntity : MCD.RLPlanning.Client.UUPGroupService.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UUPGroupService.IGroupService")]
    public interface IGroupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/SelectGroupsBySystemCode", ReplyAction="http://tempuri.org/IGroupService/SelectGroupsBySystemCodeResponse")]
        System.Data.DataTable SelectGroupsBySystemCode(string systemCode, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/IsExistsUserGroup", ReplyAction="http://tempuri.org/IGroupService/IsExistsUserGroupResponse")]
        bool IsExistsUserGroup(string systemCode, string groupName, System.Guid groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/InsertGroups", ReplyAction="http://tempuri.org/IGroupService/InsertGroupsResponse")]
        bool InsertGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity, System.Data.DataTable tableGroupUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteGroups", ReplyAction="http://tempuri.org/IGroupService/DeleteGroupsResponse")]
        bool DeleteGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/UpdateGroups", ReplyAction="http://tempuri.org/IGroupService/UpdateGroupsResponse")]
        bool UpdateGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity, System.Data.DataTable tableGroupUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetUsersByGroupID", ReplyAction="http://tempuri.org/IGroupService/GetUsersByGroupIDResponse")]
        System.Data.DataSet GetUsersByGroupID(System.Guid groupID, string systemCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGroupServiceChannel : MCD.RLPlanning.Client.UUPGroupService.IGroupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GroupServiceClient : System.ServiceModel.ClientBase<MCD.RLPlanning.Client.UUPGroupService.IGroupService>, MCD.RLPlanning.Client.UUPGroupService.IGroupService {
        
        public GroupServiceClient() {
        }
        
        public GroupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable SelectGroupsBySystemCode(string systemCode, string groupName) {
            return base.Channel.SelectGroupsBySystemCode(systemCode, groupName);
        }
        
        public bool IsExistsUserGroup(string systemCode, string groupName, System.Guid groupID) {
            return base.Channel.IsExistsUserGroup(systemCode, groupName, groupID);
        }
        
        public bool InsertGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity, System.Data.DataTable tableGroupUser) {
            return base.Channel.InsertGroups(entity, tableGroupUser);
        }
        
        public bool DeleteGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity) {
            return base.Channel.DeleteGroups(entity);
        }
        
        public bool UpdateGroups(MCD.RLPlanning.Client.UUPGroupService.GroupEntity entity, System.Data.DataTable tableGroupUser) {
            return base.Channel.UpdateGroups(entity, tableGroupUser);
        }
        
        public System.Data.DataSet GetUsersByGroupID(System.Guid groupID, string systemCode) {
            return base.Channel.GetUsersByGroupID(groupID, systemCode);
        }
    }
}
